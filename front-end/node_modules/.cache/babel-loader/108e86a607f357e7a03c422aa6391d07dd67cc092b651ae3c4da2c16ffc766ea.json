{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Loader } from '@googlemaps/js-api-loader';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      lat: 0,\n      lng: 0,\n      range: 1,\n      position: new Object(),\n      map: [],\n      hotels: [],\n      curPosMarker: [],\n      hotelMarkers: []\n    };\n  },\n  created() {\n    this.getLocation();\n    this.loadMap();\n    // this.loadHotelMarkers()\n  },\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.lat = position.coords.latitude;\n          this.lng = position.coords.longitude;\n          this.position.lat = position.coords.latitude;\n          this.position.lng = position.coords.longitude;\n          // console.log(\"getloc \" + this.lat)\n        });\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n      }\n    },\n    async loadMap() {\n      const loader = new Loader({\n        apiKey: 'AIzaSyA1M_-TOE9rtwD_SkcfAkcjEpHJhk6RY6g'\n      });\n      try {\n        await loader.importLibrary(\"maps\");\n        const position = {\n          lat: this.lat,\n          lng: this.lng\n        };\n        this.map = new google.maps.Map(document.getElementById(\"map-div\"), {\n          zoom: 15,\n          center: {\n            lat: this.lat,\n            lng: this.lng\n          },\n          // mapId: \"NoPOI\"\n          styles: [{\n            featureType: \"poi\",\n            stylers: [{\n              visibility: \"off\"\n            }]\n          }]\n        });\n        this.curPosMarker = new google.maps.Marker({\n          map: this.map,\n          position: {\n            lat: this.lat,\n            lng: this.lng\n          }\n        });\n      } catch (error) {\n        console.error(\"Error loading map:\", error);\n      }\n    },\n    async loadHotelMarkers() {\n      for (var mi in this.hotelMarkers) {\n        console.log(this.hotelMarkers[mi]);\n        this.hotelMarkers[mi].setMap(null);\n        this.hotelMarkers[mi].setVisible(false);\n      }\n      this.hotelMarkers = [];\n      let hotelsJSON = await fetch(\"http://localhost:8000/hotels/retall\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: \"{\\\"range\\\":\\\"\" + this.range + \"\\\", \\\"lat\\\":\\\"\" + this.lat + \"\\\", \\\"lng\\\":\\\"\" + this.lng + \"\\\"}\"\n      });\n      this.hotels = await hotelsJSON.json();\n      for (var i in this.hotels) {\n        let hotel = this.hotels[i];\n        this.hotelMarkers.push(new google.maps.Marker({\n          map: this.map,\n          position: {\n            lat: hotel.lat,\n            lng: hotel.lng\n          }\n        }));\n        console.log(this.hotelMarkers[this.hotelMarkers.length - 1]);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Loader","name","data","lat","lng","range","position","Object","map","hotels","curPosMarker","hotelMarkers","created","getLocation","loadMap","methods","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","console","log","loader","apiKey","importLibrary","google","maps","Map","document","getElementById","zoom","center","styles","featureType","stylers","visibility","Marker","error","loadHotelMarkers","mi","setMap","setVisible","hotelsJSON","fetch","method","headers","body","json","i","hotel","push","length"],"sources":["C:\\SIEMENS_Proj\\front-end\\src\\App.vue"],"sourcesContent":["<template>\n  <form class=\"form-inline position-absolute top-0 start-50 translate-middle-x\" style=\"z-index: 1\">\n    <div class=\"input-group\">\n      <input class=\"form-control border border-danger rounded-4 rounded-end\" type=\"number\" placeholder=\"Range\" aria-label=\"Search\"\n        v-model=\"range\"\n      >\n      <button class=\"btn btn-danger rounded-4 rounded-start\" type=\"submit\"\n        @click.prevent=\"loadHotelMarkers\"\n      >Search</button>\n    </div>\n  </form>\n\n  <div id=\"map-div\" style=\"width:100%; height: 100vh\"></div>\n\n</template>\n\n<style>\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n</style>\n\n<script>\nimport { Loader } from '@googlemaps/js-api-loader';\n\n\nexport default {\n  name: 'App',\n\n  data(){\n    return {\n      lat: 0,\n      lng: 0,\n      range: 1,\n      position: new Object(),\n      map: [],\n      hotels: [],\n      curPosMarker: [],\n      hotelMarkers: []\n    };\n  },\n\n  created() {\n    this.getLocation()\n    this.loadMap()\n    // this.loadHotelMarkers()\n  },\n\n\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          this.lat = position.coords.latitude   \n          this.lng = position.coords.longitude\n          this.position.lat = position.coords.latitude\n          this.position.lng = position.coords.longitude\n          // console.log(\"getloc \" + this.lat)\n        })\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\")\n      }\n    },\n\n    async loadMap() {\n      const loader = new Loader({ apiKey: 'AIzaSyA1M_-TOE9rtwD_SkcfAkcjEpHJhk6RY6g' });\n\n      try {\n          await loader.importLibrary(\"maps\");\n\n          const position = { lat: this.lat, lng: this.lng};\n\n          this.map = new google.maps.Map(document.getElementById(\"map-div\"), {\n              zoom: 15,\n              center: {lat: this.lat, lng: this.lng},\n              // mapId: \"NoPOI\"\n              styles:  [\n                      {\n                        featureType: \"poi\",\n                        stylers: [{ visibility: \"off\" }],\n                      }\n                    ]\n          });\n\n          this.curPosMarker = new google.maps.Marker({\n            map: this.map,\n            position: {lat: this.lat, lng: this.lng}\n          });\n\n\n      } catch (error) {\n          console.error(\"Error loading map:\", error);\n          \n      }\n    },\n\n    async loadHotelMarkers(){\n\n      for(var mi in this.hotelMarkers){\n        console.log(this.hotelMarkers[mi])\n        this.hotelMarkers[mi].setMap(null)\n        this.hotelMarkers[mi].setVisible(false)\n      }\n\n      this.hotelMarkers = []\n      \n      let hotelsJSON = await fetch(\"http://localhost:8000/hotels/retall\", {\n          method: \"POST\",\n          headers: { 'Content-Type': 'application/json' },\n          body: \"{\\\"range\\\":\\\"\" + this.range + \"\\\", \\\"lat\\\":\\\"\" + this.lat + \"\\\", \\\"lng\\\":\\\"\" + this.lng + \"\\\"}\"\n      })\n      this.hotels = await hotelsJSON.json()\n\n      for(var i in this.hotels){\n        let hotel  = this.hotels[i]\n        this.hotelMarkers.push(new google.maps.Marker({\n              map: this.map,\n              position: {lat: hotel.lat, lng: hotel.lng}\n        }));\n\n        console.log(this.hotelMarkers[this.hotelMarkers.length-1])\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}