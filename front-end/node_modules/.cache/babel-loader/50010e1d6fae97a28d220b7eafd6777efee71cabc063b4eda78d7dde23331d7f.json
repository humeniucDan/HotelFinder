{"ast":null,"code":"import { withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers($event => _ctx.getLocation(), [\"prevent\"]))\n  }, \" arata locatia \");\n}","map":{"version":3,"names":["_createElementBlock","type","class","onClick","_cache","_withModifiers","$event","_ctx","getLocation"],"sources":["C:\\SIEMENS_Proj\\front-end\\src\\App.vue"],"sourcesContent":["<template>\n  <button\n    type=\"button\" class=\"btn btn-primary\"\n    @click.prevent='getLocation()'\n  >\n  arata locatia\n  </button>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n\n  data(){\n    return {\n      lat: 0,\n      long: 1\n    };\n  },\n\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          const latitude = position.coords.latitude\n          const longitude = position.coords.longitude\n          this.lat = latitude\n          this.long = longitude\n          console.log(`Latitude: ${this.lat}, Longitude: ${this.long}`)\n        })\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\")\n      };\n\n      loadMap() {\n        console.log(\"loading Map ...\")\n      }\n    }\n\n  }\n}\n</script>\n"],"mappings":";;uBACEA,mBAAA,CAKS;IAJPC,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC,iBAAiB;IACpCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAHVC,cAAA,CAAAC,MAAA,IAGoBC,IAAA,CAAAC,WAAW;KAC5B,iBAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}