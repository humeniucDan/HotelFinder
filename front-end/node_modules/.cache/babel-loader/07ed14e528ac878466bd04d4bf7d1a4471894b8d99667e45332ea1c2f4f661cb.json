{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<form class=\\\"form-inline position-absolute top-0 start-50 translate-middle-x\\\" style=\\\"z-index:1;\\\"><div class=\\\"input-group\\\"><input class=\\\"form-control border border-danger rounded-4 rounded-end\\\" type=\\\"number\\\" placeholder=\\\"Range\\\" aria-label=\\\"Search\\\"><button class=\\\"btn btn-danger rounded-4 rounded-start\\\" type=\\\"submit\\\">Search</button></div></form><div id=\\\"map-div\\\" style=\\\"width:100%;height:100vh;\\\"></div>\", 2);\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <MapMarker\\n    :pos=\\\"{lat, lng}\\\"\\n    :gmap=\\\"map\\\"\\n  ></MapMarker> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createStaticVNode","_createElementBlock","_Fragment","_hoisted_1","_createCommentVNode"],"sources":["C:\\SIEMENS_Proj\\front-end\\src\\App.vue"],"sourcesContent":["<template>\n  <form class=\"form-inline position-absolute top-0 start-50 translate-middle-x\" style=\"z-index: 1\">\n    <div class=\"input-group\">\n      <input class=\"form-control border border-danger rounded-4 rounded-end\" type=\"number\" placeholder=\"Range\" aria-label=\"Search\">\n      <button class=\"btn btn-danger rounded-4 rounded-start\" type=\"submit\"\n      >Search</button>\n    </div>\n  </form>\n\n  <div id=\"map-div\" style=\"width:100%; height: 100vh\"></div>\n  <!-- <MapMarker\n    :pos=\"{lat, lng}\"\n    :gmap=\"map\"\n  ></MapMarker> -->\n\n</template>\n\n<style>\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n</style>\n\n<script>\nimport { Loader } from '@googlemaps/js-api-loader';\nimport MapMarker from './components/MapMarker.vue';\n\nexport default {\n  name: 'App',\n\n  data(){\n    return {\n      lat: 0,\n      lng: 0,\n      map: [],\n      hotels: [],\n      markers: []\n    };\n  },\n\n  created() {\n    await this.getLocation()\n    this.loadMap()\n    this.loadHotelMarkers()\n  },\n\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          this.lat = position.coords.latitude   \n          this.lng = position.coords.longitude\n        })\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\")\n      }\n    },\n\n    async loadMap() {\n\n      console.log(this.lat, this.lng)\n      const loader = new Loader({ apiKey: 'AIzaSyA1M_-TOE9rtwD_SkcfAkcjEpHJhk6RY6g' });\n\n      try {\n          await loader.importLibrary(\"maps\");\n\n          const position = { lat: this.lat, lng: this.lng};\n          // const { Map } = google.maps;\n          // const { AdvancedMarkerElement } = await google.maps.importLibrary(\"marker\");\n\n          this.map = new google.maps.Map(document.getElementById(\"map-div\"), {\n              zoom: 15,\n              center: {lat: this.lat, lng: this.lng},\n              // mapId: \"NoPOI\"\n              styles:  [\n                      {\n                        featureType: \"poi\",\n                        stylers: [{ visibility: \"off\" }],\n                      }\n                    ]\n          });\n\n          this.marker = new google.maps.Marker({\n            map: this.map,\n            position: {lat: this.lat, lng: this.lng}\n          });\n\n\n      } catch (error) {\n          console.error(\"Error loading map:\", error);\n          \n      }\n    },\n\n    async loadHotelMarkers(){\n      for(var mi in this.markers){\n        this.markers[mi].setMap(null)\n      }\n\n      console.log(\"{\\\"range\\\":\\\"100\\\", \\\"range\\\":\\\"\" + this.lat + \"\\\", \\\"lng\\\":\\\"\" + this.lng + \"\\\"}\")\n      let hotelsJSON = await fetch(\"http://localhost:8000/hotels/retall\", {\n          method: \"POST\",\n          headers: { 'Content-Type': 'application/json' },\n          body: \"{\\\"range\\\":\\\"100\\\", \\\"range\\\":\\\"\" + this.lat + \"\\\", \\\"lng\\\":\\\"\" + this.lng + \"\\\"}\"\n      })\n      this.hotels = await hotelsJSON.json()\n\n      console.log(this.hotels)\n\n      for(var i in this.hotels){\n        let hotel  = this.hotels[i]\n        console.log(hotel, hotel.lat, hotel.lng)\n        this.markers[i] = new google.maps.Marker({\n              map: this.map,\n              position: {lat: hotel.lat, lng: hotel.lng}\n        });\n      }\n    }\n  }\n}\n</script>\n"],"mappings":";gCAAAA,kBAAA;;uBAAAC,mBAAA,CAAAC,SAAA,SACEC,UAMO,EAGPC,mBAAA,6EAGiB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}