{"ast":null,"code":"import { Loader } from '@googlemaps/js-api-loader';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      lat: 0,\n      lng: 1,\n      map: []\n    };\n  },\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          this.lat = latitude;\n          this.lng = longitude;\n          console.log(`Latitude: ${this.lat}, Longitude: ${this.lng}`);\n        });\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n      }\n      this.loadMap();\n    },\n    async loadMap() {\n      // console.log(\"loading Map ...\")\n      const loader = new Loader({\n        apiKey: 'AIzaSyA1M_-TOE9rtwD_SkcfAkcjEpHJhk6RY6g'\n      });\n      await loader.importLibrary(\"maps\");\n      // const position = { lat: -25.344, lng: 131.031 };\n      // let localMap\n      // localMap.value = new google.maps.Map(this.map, {\n      //   center: position,\n      //   zoom: 7\n      // })\n      const position = {\n        lat: -25.344,\n        lng: 131.031\n      };\n      // Request needed libraries.\n      //@ts-ignore\n      const {\n        Map\n      } = await google.maps.importLibrary(\"maps\");\n      const {\n        AdvancedMarkerElement\n      } = await google.maps.importLibrary(\"marker\");\n\n      // The map, centered at Uluru\n      this.map = new Map(document.getElementById(\"mapDiv\"), {\n        zoom: 4,\n        center: position\n      });\n    }\n  }\n};","map":{"version":3,"names":["Loader","name","data","lat","lng","map","methods","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","console","log","loadMap","loader","apiKey","importLibrary","Map","google","maps","AdvancedMarkerElement","document","getElementById","zoom","center"],"sources":["C:\\SIEMENS_Proj\\front-end\\src\\App.vue"],"sourcesContent":["<template>\n  <button\n    type=\"button\" class=\"btn btn-primary\"\n    @click.prevent='getLocation()'\n  >\n  arata locatia\n  </button>\n\n  <div ref=\"mapDiv\" id=\"mapDiv\" style=\"width:80%; height: 80%\"></div>\n\n</template>\n\n\n<script>\nimport { Loader } from '@googlemaps/js-api-loader';\n\n\nexport default {\n  name: 'App',\n\n  data(){\n    return {\n      lat: 0,\n      lng: 1,\n      map: []\n    };\n  },\n\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          const latitude = position.coords.latitude   \n          const longitude = position.coords.longitude\n          this.lat = latitude\n          this.lng = longitude\n          console.log(`Latitude: ${this.lat}, Longitude: ${this.lng}`)\n        })\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\")\n      }\n\n      this.loadMap()\n\n    },\n\n    async loadMap() {\n      // console.log(\"loading Map ...\")\n      const loader = new Loader({apiKey:'AIzaSyA1M_-TOE9rtwD_SkcfAkcjEpHJhk6RY6g'})\n      await loader.importLibrary(\"maps\")\n      // const position = { lat: -25.344, lng: 131.031 };\n      // let localMap\n      // localMap.value = new google.maps.Map(this.map, {\n      //   center: position,\n      //   zoom: 7\n      // })\n      const position = { lat: -25.344, lng: 131.031 };\n      // Request needed libraries.\n      //@ts-ignore\n      const { Map } = await google.maps.importLibrary(\"maps\");\n      const { AdvancedMarkerElement } = await google.maps.importLibrary(\"marker\");\n\n      // The map, centered at Uluru\n      this.map = new Map(document.getElementById(\"mapDiv\"), {\n        zoom: 4,\n        center: position\n      });\n    }\n  }\n}\n</script>\n"],"mappings":"AAcA,SAASA,MAAK,QAAS,2BAA2B;AAGlD,eAAe;EACbC,IAAI,EAAE,KAAK;EAEXC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAIC,SAAS,CAACC,WAAW,EAAE;QACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;UACrD,MAAMC,QAAO,GAAID,QAAQ,CAACE,MAAM,CAACD,QAAO;UACxC,MAAME,SAAQ,GAAIH,QAAQ,CAACE,MAAM,CAACC,SAAQ;UAC1C,IAAI,CAACX,GAAE,GAAIS,QAAO;UAClB,IAAI,CAACR,GAAE,GAAIU,SAAQ;UACnBC,OAAO,CAACC,GAAG,CAAE,aAAY,IAAI,CAACb,GAAI,gBAAe,IAAI,CAACC,GAAI,EAAC;QAC7D,CAAC;MACH,OAAO;QACLW,OAAO,CAACC,GAAG,CAAC,+CAA+C;MAC7D;MAEA,IAAI,CAACC,OAAO,CAAC;IAEf,CAAC;IAED,MAAMA,OAAOA,CAAA,EAAG;MACd;MACA,MAAMC,MAAK,GAAI,IAAIlB,MAAM,CAAC;QAACmB,MAAM,EAAC;MAAyC,CAAC;MAC5E,MAAMD,MAAM,CAACE,aAAa,CAAC,MAAM;MACjC;MACA;MACA;MACA;MACA;MACA;MACA,MAAMT,QAAO,GAAI;QAAER,GAAG,EAAE,CAAC,MAAM;QAAEC,GAAG,EAAE;MAAQ,CAAC;MAC/C;MACA;MACA,MAAM;QAAEiB;MAAI,IAAI,MAAMC,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC,MAAM,CAAC;MACvD,MAAM;QAAEI;MAAsB,IAAI,MAAMF,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC,QAAQ,CAAC;;MAE3E;MACA,IAAI,CAACf,GAAE,GAAI,IAAIgB,GAAG,CAACI,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,EAAE;QACpDC,IAAI,EAAE,CAAC;QACPC,MAAM,EAAEjB;MACV,CAAC,CAAC;IACJ;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}