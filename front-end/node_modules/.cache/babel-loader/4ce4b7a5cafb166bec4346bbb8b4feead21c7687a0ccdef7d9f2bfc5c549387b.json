{"ast":null,"code":"import { withModifiers as _withModifiers, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"mapDiv\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers($event => $options.getLocation(), [\"prevent\"]))\n  }, \" arata locatia \"), _hoisted_1], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","_createElementBlock","_Fragment","type","class","onClick","_cache","_withModifiers","$event","$options","getLocation","_hoisted_1"],"sources":["C:\\SIEMENS_Proj\\front-end\\src\\App.vue"],"sourcesContent":["<template>\n  <button\n    type=\"button\" class=\"btn btn-primary\"\n    @click.prevent='getLocation()'\n  >\n  arata locatia\n  </button>\n\n  <div id=\"mapDiv\"></div>\n\n</template>\n\n\n<script>\nimport { Loader } from '@googlemaps/js-api-loader';\n\n\nexport default {\n  name: 'App',\n\n  data(){\n    return {\n      lat: 0,\n      lng: 1,\n      map: []\n    };\n  },\n\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          const latitude = position.coords.latitude   \n          const longitude = position.coords.longitude\n          this.lat = latitude\n          this.lng = longitude\n          console.log(`Latitude: ${this.lat}, Longitude: ${this.lng}`)\n        })\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\")\n      }\n\n      this.loadMap()\n\n    },\n\n    async loadMap() {\n      // console.log(\"loading Map ...\")\n      // const loader = new Loader({apiKey:\"AIzaSyA1M_-TOE9rtwD_SkcfAkcjEpHJhk6RY6g\"})\n      // await loader.importLibrary(\"maps\")\n      // const position = { lat: -25.344, lng: 131.031 };\n      // let localMap\n      // localMap.value = new google.maps.Map(this.map, {\n      //   center: position,\n      //   zoom: 7\n      // })\n      const position = { lat: -25.344, lng: 131.031 };\n      // Request needed libraries.\n      //@ts-ignore\n      const { Map } = await google.maps.importLibrary(\"maps\");\n      const { AdvancedMarkerElement } = await google.maps.importLibrary(\"marker\");\n\n      // The map, centered at Uluru\n      let map = new Map(document.getElementById(\"mapDiv\"), {\n        zoom: 4,\n        center: position,\n        mapId: \"DEMO_MAP_ID\",\n      });\n\n      // The marker, positioned at Uluru\n      const marker = new AdvancedMarkerElement({\n        map: map,\n        position: position,\n        title: \"Uluru\",\n      });\n    }\n    \n  }\n}\n</script>\n"],"mappings":";gCAQEA,mBAAA,CAAuB;EAAlBC,EAAE,EAAC;AAAQ;;uBARlBC,mBAAA,CAAAC,SAAA,SACEH,mBAAA,CAKS;IAJPI,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC,iBAAiB;IACpCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAHVC,cAAA,CAAAC,MAAA,IAGoBC,QAAA,CAAAC,WAAW;KAC5B,iBAED,GAEAC,UAAuB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}