{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<form class=\\\"form-inline position-absolute end-50\\\"><div class=\\\"input-group\\\"><input class=\\\"form-control border border-danger rounded-4 rounded-end\\\" type=\\\"number\\\" placeholder=\\\"Range\\\" aria-label=\\\"Search\\\"><button class=\\\"btn btn-danger rounded-4 rounded-start\\\" type=\\\"submit\\\">Search</button></div></form><div id=\\\"map-div\\\" style=\\\"width:100%;height:96vh;z-index:-1;\\\"></div>\", 2);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _hoisted_1;\n}","map":{"version":3,"names":["_createStaticVNode","_hoisted_1"],"sources":["C:\\SIEMENS_Proj\\front-end\\src\\App.vue"],"sourcesContent":["<template>\n  <form class=\"form-inline position-absolute end-50\">\n    <div class=\"input-group\">\n      <input class=\"form-control border border-danger rounded-4 rounded-end\" type=\"number\" placeholder=\"Range\" aria-label=\"Search\">\n      <button class=\"btn btn-danger rounded-4 rounded-start\" type=\"submit\"\n      >Search</button>\n    </div>\n  </form>\n\n  <div id=\"map-div\" style=\"width:100%; height: 96vh; z-index: -1\"></div>\n\n</template>\n\n<style>\n      input::-webkit-outer-spin-button,\n      input::-webkit-inner-spin-button {\n         -webkit-appearance: none;\n      }\n   </style>\n\n<script>\nimport { Loader } from '@googlemaps/js-api-loader';\n\n\nexport default {\n  name: 'App',\n\n  data(){\n    return {\n      lat: 0,\n      lng: 0,\n      map: []\n    };\n  },\n\n  async created() {\n    await this.getLocation()\n    this.loadMap()\n  },\n\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          this.lat = position.coords.latitude   \n          this.lng = position.coords.longitude\n        })\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\")\n      }\n    },\n\n    async loadMap() {\n\n      console.log(this.lat, this.lng)\n      const loader = new Loader({ apiKey: 'AIzaSyA1M_-TOE9rtwD_SkcfAkcjEpHJhk6RY6g' });\n\n      try {\n          await loader.importLibrary(\"maps\");\n\n          const position = { lat: this.lat, lng: this.lng};\n          const { Map } = google.maps;\n\n          this.map = new Map(document.getElementById(\"map-div\"), {\n              zoom: 15,\n              center: {lat: this.lat, lng: this.lng}\n          });\n      } catch (error) {\n          console.error(\"Error loading map:\", error);\n      }\n    }\n  }\n}\n</script>\n"],"mappings":";gCAAAA,kBAAA;;SACEC,UAMO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}