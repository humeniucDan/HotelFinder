{"ast":null,"code":"import { withModifiers as _withModifiers, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"100%\"\n  }\n};\nconst _hoisted_2 = {\n  ref: \"mapDiv\",\n  id: \"map-div\",\n  style: {\n    \"width\": \"80%\",\n    \"height\": \"80%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers($event => $options.getLocation(), [\"prevent\"]))\n  }, \" arata locatia \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["style","ref","id","_createElementBlock","_Fragment","_createElementVNode","type","class","onClick","_cache","_withModifiers","$event","$options","getLocation","_hoisted_1","_hoisted_2"],"sources":["C:\\SIEMENS_Proj\\front-end\\src\\App.vue"],"sourcesContent":["<template>\n  <button\n    type=\"button\" class=\"btn btn-primary\"\n    @click.prevent='getLocation()'\n  >\n  arata locatia\n  </button>\n\n  <div style=\"width:100%; height:100%;\">\n    <div ref=\"mapDiv\" id=\"map-div\" style=\"width:80%; height: 80%\"></div>\n  </div>\n\n</template>\n\n\n<script>\nimport { Loader } from '@googlemaps/js-api-loader';\n\n\nexport default {\n  name: 'App',\n\n  data(){\n    return {\n      lat: 0,\n      lng: 1,\n      map: []\n    };\n  },\n\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          const latitude = position.coords.latitude   \n          const longitude = position.coords.longitude\n          this.lat = latitude\n          this.lng = longitude\n          console.log(`Latitude: ${this.lat}, Longitude: ${this.lng}`)\n        })\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\")\n      }\n\n      this.loadMap()\n\n    },\n\n    async loadMap() {\n      \n      const mapDiv = ref(null)\n\n      const loader = new Loader({apiKey:'AIzaSyA1M_-TOE9rtwD_SkcfAkcjEpHJhk6RY6g'})\n      await loader.importLibrary(\"maps\")\n      \n      const position = { lat: -25.344, lng: 131.031 };\n      \n      const { Map } = await google.maps.importLibrary(\"maps\");\n\n      this.map = new Map(\n        //document.getElementById(\"map-div\")\n        mapDiv.value\n      , {\n        zoom: 4,\n        center: position\n      });\n\n      return mapDiv\n    }\n  }\n}\n</script>\n"],"mappings":";;EAQOA,KAAgC,EAAhC;IAAA;IAAA;EAAA;AAAgC;;EAC9BC,GAAG,EAAC,QAAQ;EAACC,EAAE,EAAC,SAAS;EAACF,KAA8B,EAA9B;IAAA;IAAA;EAAA;;;uBATnCG,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAKS;IAJPC,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC,iBAAiB;IACpCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAHVC,cAAA,CAAAC,MAAA,IAGoBC,QAAA,CAAAC,WAAW;KAC5B,iBAED,GAEAR,mBAAA,CAEM,OAFNS,UAEM,GADJT,mBAAA,CAAoE,OAApEU,UAAoE,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}