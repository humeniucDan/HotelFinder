{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"form\", null, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  class: \"form-control\",\n  placeholder: \"Distance\"\n})])])], -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map-div\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"100vh\"\n  }\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","type","placeholder","id","style","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2"],"sources":["C:\\SIEMENS_Proj\\front-end\\src\\App.vue"],"sourcesContent":["<template>\n  <form>\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Distance\">\n      </div>\n    </div>\n  </form>\n  <div id=\"map-div\" style=\"width:100%; height: 100vh\"></div>\n\n</template>\n\n\n<script>\nimport { Loader } from '@googlemaps/js-api-loader';\n\n\nexport default {\n  name: 'App',\n\n  data(){\n    return {\n      lat: 0,\n      lng: 0,\n      map: []\n    };\n  },\n\n  async created() {\n    await this.getLocation()\n    this.loadMap()\n  },\n\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          this.lat = position.coords.latitude   \n          this.lng = position.coords.longitude\n        })\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\")\n      }\n    },\n\n    async loadMap() {\n\n      console.log(this.lat, this.lng)\n      const loader = new Loader({ apiKey: 'AIzaSyA1M_-TOE9rtwD_SkcfAkcjEpHJhk6RY6g' });\n\n      try {\n          await loader.importLibrary(\"maps\");\n\n          const position = { lat: this.lat, lng: this.lng};\n          const { Map } = google.maps;\n\n          this.map = new Map(document.getElementById(\"map-div\"), {\n              zoom: 15,\n              center: {lat: this.lat, lng: this.lng}\n          });\n      } catch (error) {\n          console.error(\"Error loading map:\", error);\n      }\n    }\n  }\n}\n</script>\n"],"mappings":";gCACEA,mBAAA,CAMO,e,aALLA,mBAAA,CAIM;EAJDC,KAAK,EAAC;AAAU,I,aACnBD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAK,I,aACdD,mBAAA,CAA+D;EAAxDE,IAAI,EAAC,MAAM;EAACD,KAAK,EAAC,cAAc;EAACE,WAAW,EAAC;;gCAI1DH,mBAAA,CAA0D;EAArDI,EAAE,EAAC,SAAS;EAACC,KAAiC,EAAjC;IAAA;IAAA;EAAA;;;uBARpBC,mBAAA,CAAAC,SAAA,SACEC,UAMO,EACPC,UAA0D,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}